add jwt expire to 1h and check for error, it will send back session expired message or something so that the front end will kick the user back to the login page with the message.

in middleware/authorization.js

jwt.verify(token, 'shhhhh', function(err, decoded) {
  if (err) {
    /*
      err = {
        name: 'TokenExpiredError',
        message: 'jwt expired',
        expiredAt: 1408621000
      }
    */
  }
});

- on auth route need logout to invalidate the JWT token!

Front end
1. Draw front end layout
2. partition into React components and determine nesting.
3. Use redux as the store and RTK query for backend calls.
4. save the JWT into cookies


app.js
app.use(limiter) // disabled for now *******